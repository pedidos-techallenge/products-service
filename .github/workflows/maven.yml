name: CI Pipeline

on:
  push:
    branches:
      - develop      
      - 'feature/*'   
      - 'bugfix/*'     
      - 'hotfix/*'     
      - main           
  pull_request:
    branches:
      - main   
      - develop        
      - 'feature/*'     
      - 'bugfix/*'    
      - 'hotfix/*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and run tests
        run: |
          mvn clean test -Dspring.profiles.active=test

  sonarqube-analysis:
    if: |
      github.ref == 'refs/heads/main' || 
      github.event.pull_request.base.ref == 'main' || 
      github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
